// Schema Prisma adaptado para o padrão de produtos da CompreFi
// Baseado na estrutura de dados do frontend atual

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  password String
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id               String   @id @default(uuid())
  model            String // Ex: "iPhone 15 Pro Max", "MacBook Pro 16" M4 Max"
  storage          String // Ex: "256GB", "(1TB)", "(48GB RAM / 1TB SSD)"
  color            String // Ex: "Titânio Natural", "Prata, Preto-espacial"
  battery          String // Ex: "89%", "100%"
  originalPrice    String // Ex: "R$ 6.590,00" (preço de referência para alavancagem)
  installmentPrice String // Ex: "R$ 540,67", "12x R$ 3.151,00" (preço parcelado)
  pixPrice         String // Ex: "R$ 5.690" (preço à vista no PIX)
  details          String // Ex: "sem detalhes | garantia Apple até junho"
  image            String? // URL da imagem principal do produto
  realImages       String[] // Array de URLs das fotos reais do produto
  category         String // Ex: "iPhones Seminovos", "iPhones Novos", "Macbooks"
  specs            String // Especificações técnicas detalhadas

  // Campos para cálculos automáticos (opcionais, para integração com planilha)
  cost    Float? // Custo base do produto (para cálculos automáticos)
  freight Float? // Valor do frete (padrão: 100)

  // Campos de controle
  isActive Boolean @default(true)
  isNew    Boolean @default(true) // true para produtos novos, false para seminovos

  // Relacionamentos
  user   User   @relation(fields: [userId], references: [id])
  userId String

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Category {
  id          String  @id @default(uuid())
  name        String  @unique // Ex: "iPhones Seminovos", "iPhones Novos", "Macbooks"
  slug        String  @unique // Ex: "iphones-seminovos", "iphones-novos", "macbooks"
  description String?
  isActive    Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model ProductImage {
  id        String @id @default(uuid())
  productId String
  imageUrl  String
  imageType String // "main", "real", "gallery"
  order     Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_images")
}

// Tabela para armazenar configurações de preços e cálculos
model PriceConfig {
  id                String @id @default(uuid())
  name              String @unique // Ex: "default", "iphones", "macbooks"
  freightValue      Float  @default(100)
  pixMultiplier     Float  @default(0.9) // Divisor para preço PIX: (custo + frete) / 0.9
  installmentDiv1   Float  @default(0.8651) // Primeiro divisor para parcelas
  installmentDiv2   Int    @default(12) // Número de parcelas
  originalPricePerc Float  @default(1.2) // Percentual sobre PIX para preço original

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("price_configs")
}

// troca

model ValorTroca {
  id         String   @id @default(cuid())
  modelo     String
  capacidade String
  valorBase  Float    @map("valor_base")
  ativo      Boolean  @default(true)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@unique([modelo, capacidade])
  @@map("valores_troca")
}

model QuestionarioTroca {
  id              String   @id @default(cuid())
  modeloAtual     String   @map("modelo_atual")
  capacidadeAtual String   @map("capacidade_atual")
  corAtual        String   @map("cor_atual")
  bateriaAtual    Int      @map("bateria_atual")
  defeitos        Json?
  pecasTrocadas   Boolean  @default(false) @map("pecas_trocadas")
  quaisPecas      String?  @map("quais_pecas")
  modeloDesejado  String   @map("modelo_desejado")
  ondeOuviu       String?  @map("onde_ouviu")
  tempoPensando   String?  @map("tempo_pensando")
  urgenciaTroca   String?  @map("urgencia_troca")
  valorAparelho   Float?   @map("valor_aparelho")
  valorFinal      Float?   @map("valor_final")
  temDefeito      Boolean  @default(false) @map("tem_defeito")
  precisaCotacao  Boolean  @default(false) @map("precisa_cotacao")
  nome            String?
  email           String?
  whatsapp        String?
  etapaAtual      Int      @default(1) @map("etapa_atual")
  concluido       Boolean  @default(false)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("questionario_troca")
}
